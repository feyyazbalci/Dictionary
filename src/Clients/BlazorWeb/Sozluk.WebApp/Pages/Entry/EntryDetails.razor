@page "/entry/{Id:guid}"

@if (entry is not null)
{
    <EntryViewerComponent Entry="@entry" />
    <br />
    if (comments is not null)
    {
        foreach (var comment in comments.Results)
        {
            <Sozluk.WebApp.Pages.EntryComment.Components.EntryCommentViewerComponent EntryComment="@comment" />
        }
    }
    <br />
    <AuthorizeView>
        <Authorized>
            <br />
            <br />
            <Sozluk.WebApp.Pages.EntryComment.Components.CreateEntryCommentComponent EntryId="@entry.Id"
                                                                                     EntrySubject="@entry.Subject"
                                                                                     OnClicked="@OnCommentCreate" />
        </Authorized>
    </AuthorizeView>
}

@code {
    [Parameter]
    public Guid Id { get; set; }
    [Inject]
    IEntryService entryService { get; set; }

    private GetEntryDetailViewModel entry = new();
    private PagedViewModel<GetEntryCommentsViewModel> comments = new();
    private int currentPage = 1;

    protected override async Task OnParametersSetAsync()
    {
        entry = await entryService.GetEntryDetail(Id);
        await RefreshComments(1);
        currentPage = comments.PageInfo.CurrentPage;
    }

    public async Task OnCommentCreate(CreateEntryCommentCommand command)
    {
        await entryService.CreateEntryComment(command);
        await RefreshComments(currentPage);
    }
    public async Task RefreshComments(int pageNumber)
    {
        comments = await entryService.GetEntryComments(entry.Id, pageNumber, 5);
    }



}
